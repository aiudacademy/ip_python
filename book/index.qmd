# Introducción {.unnumbered}

**Introducción a la Programación *con Python*** es un libro diseñado para aquellas personas que desean iniciarse en el mundo de la programación desde cero. En este libro te guiaremos a través de los conceptos básicos de la programación y te mostraremos cómo aplicarlos para crear programas simples y útiles. 

::: {.callout-note}
## Nota
Ya sea que estés interesado en la programación por diversión, para desarrollar habilidades profesionales o simplemente para comprender mejor la tecnología que te rodea, este libro es un excelente punto de partida.
:::

## ¿Por qué aprender a programar?

Si quieres entender al menos un poco el mundo que te rodea es importante tener conocimientos básicos de matemáticas, física, química y biología. A esta lista ahora se suman las ciencias de la computación pues vivimos en un mundo cada vez más domidado por la tecnología, y tenemos dos opciones:

1. **la usamos para nuestro veneficio**
2. **la tecnología nos usa a nosotros** 

Es por eso que, aunque solo sea con la finalidad de entender como funciona todo a nuestro alrededor, es importante tener nociones de ciencias de la computación en general y de programación en particular.

Dicho esto, hablemos un poco de la estructura de este libro y del lenguaje de programación que hemos elejido para escribir los códigos de los ejemplos del mismo.

## Estructura del libro

**Introducción a la Programación con Python** está dividido en n capítulos:

1. Introducción a la Programación
    + 1.1. Historía de la Computación
    + 1.2. Qué es la Programación
    + 1.3. Lenguajes de Programación
    + 1.4. Entorno de Desarrollo Integrado (Integrated Development Environment 'IDE')

2. Lenguaje Python
    + 2.1. Instalación del ambiente de desarrollo ([Anaconda](https://www.anaconda.com/))
    + 2.2. Ambientes Virtuales en Python
    + 2.3. 

## ¿Por qué Python?

Python es un lenguaje fácil de aprender y de usar, tiene una sintaxis clara y legible, amplia comunidad y recursos, versatilidad, enfoque en la eficiencia y facilidad de instalación y configuración. Además y gracias su uso extensivo en Inteligencia Artificial, Machine Learning y Ciencia de Datos; se ha convertido en uno de los lenguajes más usados en el mundo y de los más demandados por las empresas. *Podríamos decir que si sabes Python nunca te faltaran las oportunidades de trabajo*.

[![Python ha ido ganando popularidad en los últimos años (no ha parado de crecer desde el 2018), llegando a desplazar en los últimos meses a lenguajes como Java y C.](img/tiobe_index.png)](https://www.tiobe.com/tiobe-index/)




::: {.callout-caution}
## Work in Progress
This is a Work in Progress project. The idea is to summarize all ML topics and how I see and understand them.
:::

Machine learning is a rapidly growing field that enables computers to learn from data, without being explicitly programmed. The goal of machine learning is to build models that can make predictions or take actions based on input data, and improve their performance over time through experience.

::: {.callout-note}
Note that there are five types of callouts, including:
`note`, `warning`, `important`, `tip`, and `caution`.
:::

::: {.callout-tip}
## Tip With Caption

This is an example of a callout with a caption.
:::

::: {.callout-caution collapse="true"}
## Expand To Learn About Collapse

This is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse="true"` to collapse it by default or `collapse="false"` to make a collapsible callout that is expanded by default.
:::

## Versiones usadas en este libro

```{python}

#| echo: true
import sys
print("Python version: {}".format(sys.version))
import pandas as pd
print("pandas version: {}".format(pd.__version__))
import matplotlib
print("matplotlib version: {}".format(matplotlib.__version__))
import numpy as np
print("NumPy version: {}".format(np.__version__))
import scipy as sp
print("SciPy version: {}".format(sp.__version__))
import IPython
print("IPython version: {}".format(IPython.__version__))
import sklearn
print("scikit-learn version: {}".format(sklearn.__version__))
```